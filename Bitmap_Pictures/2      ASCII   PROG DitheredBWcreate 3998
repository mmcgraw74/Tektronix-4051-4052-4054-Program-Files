100 REM Dithered BW R12 Picture Creator - Jan 10, 2023 Monty McGraw110 REM Supports max 1024x780 black and white BMP image120 REM Use PhotoDemon 9.0 https://github.com/tannerhelland/PhotoDemon130 REM Open color photo up to 1024x780. Autocorrect and Enhance140 REM Adjustments | Color to Monochrome | Auto Threshold, Sierra3 Ok150 REM Save As Bitmap. Open Bitmap with HXD then160 REM export BMP file to Motorola S19 ASCII HEX format.170 REM Use Notepad++ to replace CRLF with "CR" to INPUT with this pgm.180 REM DDDemo.exe api.256file.com/dddemo.exe/en-download-98888.html190 REM shows format of bitmap. Data is packed 8-dots per byte MSB-LSB200 REM see https://en.wikipedia.org/wiki/BMP_file_format for details210 INIT 220 REM FNB tests bit X9 (LSB bit 1 to 8) in V9=value, Returns 1 or 0230 DEF FNB(X9)=INT(V9/2^X9-INT(V9/2^X9)+0.5)240 REM X5 & Y5 =absolute D/A X,Y for image lower left corner,N=bytes250 X5=0260 Y5=0270 PRINT "R12 Dithered Bitmap CREATOR Program - Jan 10, 2023 MCM"280 WINDOW 0,130,0,100290 DIM P$(3072),A$(80),D(2),Z$(6)300 P$=""310 REM initialize serial port for BMP string input320 REM test with BMP file on Flash Drive & Display"330 REM GO TO 220340 CALL "RATE",9600,5,0350 CALL "TSTRIN","","",""360 CALL "RSTRIN","","",""370 CALL "CMFLAG",3380 PRINT "Convert BMP ASCII from SERIAL Comm to R12 BIN on FlashDrive"390 PRINT "Enter the Flash Drive BINARY R12 output file number: ";400 INPUT F410 FIND @5:F420 INPUT @5,19:A$430 B$=SEG(A$,8,1)440 L=LEN(A$)450 S$=SEG(A$,38,L-38+1)460 S=VAL(S$)470 IF B$="B" OR B$="N" THEN 510480 PRINT "Flash Drive file# ";F;" is not a BIN or NEW. Press ENTER:";490 INPUT A$500 GO TO 380510 PRINT "NOTE: Tek screen will blank during this process and"520 PRINT "Progress messages will be sent to SERIAL until DONE."530 PRINT "Press RETURN key - then Start SERIAL file transfer";540 INPUT A$550 REM to test display DELETE 410 and XXX560 FIND @5:F570 INPUT @40:A$580 REM discard first $, check BM", filesize, then Image Width & Length590 INPUT @40:A$600 REM check for S1 vs S2 format610 B$=SEG(A$,1,2)620 S2=0630 IF B$="S1" THEN 650640 S2=2650 B$=SEG(A$,9+S2,4)660 IF B$="424D" THEN 690670 PRINT "Not BMP file format.Stop SERIAL file transfer!"680 GO TO 510690 B$=SEG(A$,13+S2,2)700 CALL "HEXDEC",B$,F9710 B$=SEG(A$,15+S2,2)720 CALL "HEXDEC",B$,B722 B$=SEG(A$,17+S2,2)724 CALL "HEXDEC",B$,B0730 REM get filesize from file740 F0=65536*B0+256*B+F9750 B$=SEG(A$,45+S2,2)760 CALL "HEXDEC",B$,W0770 B$=SEG(A$,47+S2,2)780 CALL "HEXDEC",B$,B790 W0=256*B+W0800 REM 1 bpp Monochrome bitmap is stored 8-pixels per byte,810 REM aligned on DWORD boundaries for RowSize (R0) bytes820 B$=SEG(A$,53+S2,2)830 CALL "HEXDEC",B$,H0840 B$=SEG(A$,55+S2,2)850 CALL "HEXDEC",B$,B860 H0=256*B+H0870 REM Rowsize in bytes=(filesize-header)/image height880 R0=INT((F0-76)/H0+0.9)890 IF W0<1025 AND H0<781 THEN 920900 PRINT "Image is too Wide or too High: W=";W0;" H=";H0910 GO TO 510920 REM BW data is 1 for dot, 0 for no dot, MSB to LSB Left-Right930 REM BW data starts on second input at 33, skip last CRC byte940 INPUT @40:A$960 REM center the image if smaller than 1024x780970 X0=INT((1024-W0)/2)-1 MAX 0980 Y0=INT((780-H0)/2)-1 MAX 0990 C0=69-2+S21000 FOR Y=0 TO H0-1 MIN 7791010 REM count dots until W0 for end of row1020 W9=01030 FOR X=0 TO R0-11040 C0=C0+21050 IF C0<73+S2 THEN 10801060 C0=9+S21070 INPUT @40:A$1080 B$=SEG(A$,C0,2)1090 CALL "HEXDEC",B$,V91100 REM don't use loop for bits to exit end of row cleanly1110 X9=81120 X8=ABS(X9-8)1130 U=FNB(X9)1140 IF U=0 THEN 12301150 D(1)=X*8+X8+X01160 D(2)=Y+Y01170 D=D*0.1281180 CALL "CHANGE",D,Z$1190 CALL "RDOTS",Z$,1,0,01200 P0=LEN(P$)+11210 P$=REP(Z$,P0,0)1230 W9=W9+11240 IF W9<>W0 THEN 12501242 W9=01244 GO TO 12701250 X9=X9-11260 IF X9>0 THEN 11201270 NEXT X1275 IF LEN(P$)<3 THEN 12901280 WRITE @5:P$1290 P0=01300 P$=""1310 PRINT @40:Y1320 NEXT Y1330 WRITE @5:"|EOG|"1340 END 